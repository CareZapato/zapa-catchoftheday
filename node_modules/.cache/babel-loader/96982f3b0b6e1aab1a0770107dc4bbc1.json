{"ast":null,"code":"import _objectSpread from \"C:/Proyectos WOM/Cursos/React-For-Beginners/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:/Proyectos WOM/Cursos/React-For-Beginners/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Proyectos WOM/Cursos/React-For-Beginners/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Proyectos WOM/Cursos/React-For-Beginners/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Proyectos WOM/Cursos/React-For-Beginners/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Proyectos WOM/Cursos/React-For-Beginners/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Proyectos WOM\\\\Cursos\\\\React-For-Beginners\\\\React-For-Beginners-Starter-Files\\\\catch-of-the-day\\\\src\\\\components\\\\Order.js\";\nimport React from \"react\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Order = /*#__PURE__*/function (_React$Component) {\n  _inherits(Order, _React$Component);\n\n  var _super = _createSuper(Order);\n\n  function Order() {\n    var _this;\n\n    _classCallCheck(this, Order);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderOrder = function (key) {\n      var fish = _this.props.fishes[key];\n      var count = _this.props.order[key];\n      var isAvailable = fish && fish.status === \"available\";\n      var transitionOptions = {\n        className: \"order\",\n        key,\n        timeout: {\n          enter: 500,\n          exit: 500\n        }\n      }; // if fish is not available, don't render anything\n\n      if (!fish) {\n        return null;\n      }\n\n      if (!isAvailable) {\n        return /*#__PURE__*/_jsxDEV(CSSTransition, _objectSpread(_objectSpread({}, transitionOptions), {}, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Sorry \", fish ? fish.name : 'fish', \" is no longer available\"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, _assertThisInitialized(_this))\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, _assertThisInitialized(_this));\n      }\n\n      return /*#__PURE__*/_jsxDEV(CSSTransition, {\n        classNames: \"order\",\n        timeout: {\n          enter: 500,\n          exit: 500\n        },\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(TransitionGroup, {\n              component: \"span\",\n              className: \"count\",\n              children: /*#__PURE__*/_jsxDEV(CSSTransition, _objectSpread(_objectSpread({}, transitionOptions), {}, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 33\n                }, _assertThisInitialized(_this))\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 29\n              }, _assertThisInitialized(_this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }, _assertThisInitialized(_this)), count, \" lbs \", fish.name, formatPrice(count * fish.price), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: function onClick() {\n                return _this.props.removeFromOrder(key);\n              },\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, _assertThisInitialized(_this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, _assertThisInitialized(_this))\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, _assertThisInitialized(_this))\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, _assertThisInitialized(_this));\n    };\n\n    return _this;\n  }\n\n  _createClass(Order, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var orderIds = Object.keys(this.props.order);\n      var total = orderIds.reduce(function (prevTotal, key) {\n        var fish = _this2.props.fishes[key];\n        var count = _this2.props.order[key];\n        var isAvailable = fish && fish.status === \"available\";\n\n        if (isAvailable) {\n          return prevTotal + count * fish.price;\n        }\n\n        return prevTotal;\n      }, 0);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n          component: \"ul\",\n          className: \"order\",\n          children: orderIds.map(this.renderOrder)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total\",\n          children: [\"Total: \", formatPrice(total)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Order;\n}(React.Component);\n\nexport default Order;","map":{"version":3,"sources":["C:/Proyectos WOM/Cursos/React-For-Beginners/React-For-Beginners-Starter-Files/catch-of-the-day/src/components/Order.js"],"names":["React","formatPrice","TransitionGroup","CSSTransition","Order","renderOrder","key","fish","props","fishes","count","order","isAvailable","status","transitionOptions","className","timeout","enter","exit","name","price","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {formatPrice} from \"../helpers\";\r\nimport {TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nclass Order extends React.Component {\r\n    renderOrder = (key) => {\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        const isAvailable = fish && fish.status === \"available\";\r\n        const transitionOptions = {\r\n            className: \"order\",\r\n            key,\r\n            timeout: {enter: 500, exit: 500}\r\n        }\r\n        // if fish is not available, don't render anything\r\n        if (!fish) {\r\n            return null;\r\n        }\r\n\r\n        if(!isAvailable) {\r\n            return (\r\n                <CSSTransition {...transitionOptions}>\r\n                    <li key={key}>\r\n                        Sorry {fish ? fish.name : 'fish'} is no longer available\r\n                    </li>\r\n                </CSSTransition>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <CSSTransition \r\n                classNames=\"order\" \r\n                key={key} \r\n                timeout={{enter: 500, exit: 500}}\r\n            >\r\n                <li key={key}>\r\n                    <span>\r\n                        <TransitionGroup component=\"span\" className=\"count\">\r\n                            <CSSTransition {...transitionOptions}>\r\n                                <span>{count}</span>\r\n                            </CSSTransition>\r\n                        </TransitionGroup>\r\n                        {count} lbs {fish.name}\r\n                        {formatPrice(count * fish.price)} \r\n                        <button onClick={() => this.props.removeFromOrder(key)}>X</button> \r\n                    </span>\r\n                </li>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n    render() {\r\n        const orderIds = Object.keys(this.props.order);\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const fish = this.props.fishes[key];\r\n            const count = this.props.order[key];\r\n            const isAvailable = fish && fish.status === \"available\";\r\n            if (isAvailable) {\r\n                return prevTotal + (count * fish.price);\r\n            }\r\n            return prevTotal;\r\n        }\r\n        , 0);\r\n\r\n        return(\r\n            <div className=\"order\">\r\n                <h2>Order</h2>\r\n                <TransitionGroup component=\"ul\" className=\"order\">\r\n                    {orderIds.map(this.renderOrder)}\r\n                </TransitionGroup>\r\n                <div className=\"total\">\r\n                    Total: {formatPrice(total)}\r\n                </div>\r\n            </div>\r\n        );\r\n    } \r\n}\r\n\r\nexport default Order; "]},"metadata":{},"sourceType":"module"}